on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
    secrets:
      production-edit-key:
        required: true
      slack-webhook:
        required: true
      lib-clone-key:
        required: false   # omit if not using other repos
      artifact-registry-key:
        required: true

env:
  HOST: australia-southeast1-docker.pkg.dev
  REPO: armadaplatform/connect

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      lib_key: ${{ secrets.lib-clone-key }}
      image_url: ${{ env.HOST }}/${{ env.REPO }}/${{ inputs.app }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.slack-webhook }}
          SLACK_CHANNEL: deploy
          SLACK_TITLE: Building ${{ inputs.app }}...
          SLACK_FOOTER: Sensium Labs
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Google Container Registry
        run: |
          echo "${{ secrets.artifact-registry-key }}" | base64 -d | docker login -u _json_key --password-stdin https://${{ env.HOST }}/
      # unfortunately we can't use deploy keys because the git config dance done by webfactory/ssh-agent happens in the runner
      # not in the docker container. Instead we use an SSH key on 'gpsengine-node' user and forward the access through to the
      # docker container with ssh-agent.
      - uses: webfactory/ssh-agent@v0.5.4
        if: ${{ env.lib_key != ''}}
        with:
            ssh-private-key: ${{ secrets.lib-clone-key }}
      - name: Docker build (with lib clone key)
        if: ${{ env.lib_key != ''}}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.image_url }}:${{ github.ref_name }},${{ env.image_url }}:latest
          cache-from: type=registry,ref=${{ env.image_url }}:latest
          cache-to: type=inline
          ssh: default=${{ env.SSH_AUTH_SOCK }}
      - name: Docker build (without lib clone key)
        if: ${{ env.lib_key == ''}}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.image_url }}:${{ github.ref_name }},${{ env.image_url }}:latest
          cache-from: type=registry,ref=${{ env.image_url }}:latest
          cache-to: type=inline

