on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
#   secrets:
#     production-edit-key:
#       required: true
#     slack-webhook:
#       required: true
#     lib-clone-key:
#       required: false   # omit if not using other repos
#     artifact-registry-key:
#       required: true

env:
  HOST: australia-southeast1-docker.pkg.dev
  REPO: armadaplatform/connect

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    env:
      image_url: australia-southeast1-docker.pkg.dev/armadaplatform/connect/${{ inputs.app }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deploy
          SLACK_TITLE: Building ${{ inputs.app }}...
          SLACK_FOOTER: Sensium Labs
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Google Container Registry
        run: |
          echo "${{ secrets.GCLOUD_SERVICE_KEY }}" | base64 -d | docker login -u _json_key --password-stdin https://${{ env.HOST }}/
      # unfortunately we can't use deploy keys because the git config dance done by webfactory/ssh-agent happens in the runner
      # not in the docker container. Instead we use an SSH key on 'gpsengine-node' user and forward the access through to the
      # docker container with ssh-agent.
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.LIB_CLONE_KEY }}
      - name: Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.image_url }}:${{ github.ref_name }},${{ env.image_url }}:latest
          cache-from: type=registry,ref=${{ env.image_url }}:latest
          cache-to: type=inline
          ssh: default=${{ env.SSH_AUTH_SOCK }}

  update-production:
    runs-on: ubuntu-latest
    environment: production
    needs:
      - build-and-push
    steps:
      - name: Install SSH Client ðŸ”‘
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PRODUCTION_EDIT_KEY }}
      - uses: imranismail/setup-kustomize@v1
      - run: git clone git@github.com:gpsengine/ConnectProduction.git .
      - run: kustomize edit set image backend=${{ env.IMAGE }}:${{ github.ref_name }}
        working-directory: ./app
      - run: git add .
      - run: |
          git config user.email "buildbot@gpsengine.github.com"
          git config user.name "$GITHUB_ACTOR"
      - run: git commit -m "Update ${{ inputs.app }}"
      - run: git push
      - uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deploy
          SLACK_TITLE: ${{ inputs.app }} Complete
          SLACK_FOOTER: Sensium Labs

